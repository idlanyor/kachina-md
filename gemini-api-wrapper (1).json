{
  "openapi": "3.0.3",
  "info": {
    "title": "Gemini API Wrapper",
    "description": "A simple wrapper for Google's Gemini API with chat, image generation, and figurine creation capabilities",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "chat",
      "description": "Chat endpoints"
    },
    {
      "name": "image",
      "description": "Image generation endpoints"
    },
    {
      "name": "figurine",
      "description": "Figurine generation endpoints"
    },
    {
      "name": "hijab",
      "description": "Hijab generation endpoints"
    },
    {
      "name": "sdmtinggi",
      "description": "Sdmtinggi generation endpoints"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "operationId": "getIndex",
        "responses": {
          "200": {}
        }
      }
    },
    "/chat/": {
      "post": {
        "parameters": [],
        "operationId": "postChat",
        "tags": [
          "chat"
        ],
        "summary": "Generate chat response with streaming",
        "description": "Generate a streaming response from Gemini chat model with optional tools and thinking mode",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string"
                  },
                  "sessionId": {
                    "type": "string"
                  },
                  "systemPrompt": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "useTools": {
                    "type": "boolean"
                  },
                  "useThinking": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "message"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string"
                  },
                  "sessionId": {
                    "type": "string"
                  },
                  "systemPrompt": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "useTools": {
                    "type": "boolean"
                  },
                  "useThinking": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "message"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string"
                  },
                  "sessionId": {
                    "type": "string"
                  },
                  "systemPrompt": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "useTools": {
                    "type": "boolean"
                  },
                  "useThinking": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "model",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sessionId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "systemPrompt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "message",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "file",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "useTools",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "useThinking",
            "required": false
          }
        ],
        "operationId": "getChat",
        "tags": [
          "chat"
        ],
        "summary": "Generate chat response (GET) with streaming",
        "description": "Generate a streaming response using query parameters with optional tools and thinking mode",
        "responses": {
          "200": {}
        }
      }
    },
    "/chat/upload": {
      "post": {
        "parameters": [],
        "operationId": "postChatUpload",
        "tags": [
          "chat"
        ],
        "summary": "Generate chat response with file upload",
        "description": "Generate a response from Gemini chat model based on the provided message and uploaded file",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string"
                  },
                  "sessionId": {
                    "type": "string"
                  },
                  "systemPrompt": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "file": {
                    "default": "File",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "message",
                  "file"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string"
                  },
                  "sessionId": {
                    "type": "string"
                  },
                  "systemPrompt": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "file": {
                    "default": "File",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "message",
                  "file"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string"
                  },
                  "sessionId": {
                    "type": "string"
                  },
                  "systemPrompt": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "file": {
                    "default": "File",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "message",
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/chat/with-file": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "model",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sessionId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "systemPrompt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "message",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "file",
            "required": true
          }
        ],
        "operationId": "getChatWith-file",
        "tags": [
          "chat"
        ],
        "summary": "Generate chat response with file URL (GET)",
        "description": "Generate a response from Gemini chat model with a file provided via URL",
        "responses": {
          "200": {}
        }
      }
    },
    "/image/generate": {
      "post": {
        "parameters": [],
        "operationId": "postImageGenerate",
        "tags": [
          "image"
        ],
        "summary": "Generate image",
        "description": "Generate an image from Gemini image model based on the provided prompt",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string"
                  },
                  "prompt": {
                    "type": "string"
                  }
                },
                "required": [
                  "prompt"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string"
                  },
                  "prompt": {
                    "type": "string"
                  }
                },
                "required": [
                  "prompt"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string"
                  },
                  "prompt": {
                    "type": "string"
                  }
                },
                "required": [
                  "prompt"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "model",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "prompt",
            "required": true
          }
        ],
        "operationId": "getImageGenerate",
        "tags": [
          "image"
        ],
        "summary": "Generate image (GET)",
        "description": "Generate an image from Gemini image model using query parameters",
        "responses": {
          "200": {}
        }
      }
    },
    "/figurine/": {
      "post": {
        "parameters": [],
        "operationId": "postFigurine",
        "tags": [
          "figurine"
        ],
        "summary": "Generate figurine from image",
        "description": "Convert an input image into a realistic figurine using AI - returns image buffer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "default": "File",
                    "description": "Input image to convert to figurine",
                    "type": "string",
                    "format": "binary",
                    "extension": "string"
                  }
                },
                "required": [
                  "image"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "default": "File",
                    "description": "Input image to convert to figurine",
                    "type": "string",
                    "format": "binary",
                    "extension": "string"
                  }
                },
                "required": [
                  "image"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "default": "File",
                    "description": "Input image to convert to figurine",
                    "type": "string",
                    "format": "binary",
                    "extension": "string"
                  }
                },
                "required": [
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      },
      "get": {
        "parameters": [
          {
            "description": "URL of the input image to convert to figurine",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "imageUrl",
            "required": true
          }
        ],
        "operationId": "getFigurine",
        "tags": [
          "figurine"
        ],
        "summary": "Generate figurine from image URL",
        "description": "Convert an input image from URL into a realistic figurine using AI - returns image buffer",
        "responses": {
          "200": {}
        }
      }
    },
    "/hijabkan/": {
      "post": {
        "parameters": [],
        "operationId": "postHijabkan",
        "tags": [
          "hijab"
        ],
        "summary": "Generate hijab from image",
        "description": "Convert hair in input image into a neat, fully-covered white hijab in Indonesian Muslim style - returns image buffer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "default": "File",
                    "description": "Input image to convert to hijab",
                    "type": "string",
                    "format": "binary",
                    "extension": "string"
                  }
                },
                "required": [
                  "image"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "default": "File",
                    "description": "Input image to convert to hijab",
                    "type": "string",
                    "format": "binary",
                    "extension": "string"
                  }
                },
                "required": [
                  "image"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "default": "File",
                    "description": "Input image to convert to hijab",
                    "type": "string",
                    "format": "binary",
                    "extension": "string"
                  }
                },
                "required": [
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      },
      "get": {
        "parameters": [
          {
            "description": "URL of the input image to convert to hijab",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "imageUrl",
            "required": true
          }
        ],
        "operationId": "getHijabkan",
        "tags": [
          "hijab"
        ],
        "summary": "Generate hijab from image URL",
        "description": "Convert hair in input image from URL into a neat, fully-covered white hijab in Indonesian Muslim style - returns image buffer",
        "responses": {
          "200": {}
        }
      }
    },
    "/sdmtinggi/": {
      "post": {
        "parameters": [],
        "operationId": "postSdmtinggi",
        "tags": [
          "sdmtinggi"
        ],
        "summary": "Generate SdmTinggi from image",
        "description": "Convert character to grayscale, add black censor bar on eyes, and replace background with red color - returns image buffer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "default": "File",
                    "description": "Input image to convert to grayscale with censor bar and red background",
                    "type": "string",
                    "format": "binary",
                    "extension": "string"
                  }
                },
                "required": [
                  "image"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "default": "File",
                    "description": "Input image to convert to grayscale with censor bar and red background",
                    "type": "string",
                    "format": "binary",
                    "extension": "string"
                  }
                },
                "required": [
                  "image"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "default": "File",
                    "description": "Input image to convert to grayscale with censor bar and red background",
                    "type": "string",
                    "format": "binary",
                    "extension": "string"
                  }
                },
                "required": [
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      },
      "get": {
        "parameters": [
          {
            "description": "URL of the input image to convert to SdmTinggi style",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "imageUrl",
            "required": true
          }
        ],
        "operationId": "getSdmtinggi",
        "tags": [
          "sdmtinggi"
        ],
        "summary": "Generate SdmTinggi from image URL",
        "description": "Convert character to grayscale, add black censor bar on eyes, and replace background with red color from URL - returns image buffer",
        "responses": {
          "200": {}
        }
      }
    }
  },
  "components": {
    "schemas": {}
  }
}